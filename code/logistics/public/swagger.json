{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"expectedRouteJSON": {
				"properties": {
					"extraChargingTime": {
						"type": "number",
						"format": "double"
					},
					"energyConsumed": {
						"type": "number",
						"format": "double"
					},
					"timeRequired": {
						"type": "number",
						"format": "double"
					},
					"distance": {
						"type": "number",
						"format": "double"
					},
					"idEnd": {
						"type": "string"
					},
					"idStart": {
						"type": "string"
					},
					"idRoute": {
						"type": "string"
					}
				},
				"required": [
					"extraChargingTime",
					"energyConsumed",
					"timeRequired",
					"distance",
					"idEnd",
					"idStart",
					"idRoute"
				],
				"type": "object"
			},
			"expectedBodyRoute": {
				"properties": {
					"extraChargingTime": {
						"type": "number",
						"format": "double"
					},
					"energyConsumed": {
						"type": "number",
						"format": "double"
					},
					"timeRequired": {
						"type": "number",
						"format": "double"
					},
					"distance": {
						"type": "number",
						"format": "double"
					},
					"idEnd": {
						"type": "string"
					},
					"idStart": {
						"type": "string"
					},
					"idRoute": {
						"type": "string"
					}
				},
				"required": [
					"extraChargingTime",
					"energyConsumed",
					"timeRequired",
					"distance",
					"idEnd",
					"idStart",
					"idRoute"
				],
				"type": "object"
			},
			"expectedPatchBodyRoute": {
				"properties": {
					"extraChargingTime": {
						"type": "number",
						"format": "double"
					},
					"energyConsumed": {
						"type": "number",
						"format": "double"
					},
					"timeRequired": {
						"type": "number",
						"format": "double"
					},
					"distance": {
						"type": "number",
						"format": "double"
					},
					"idEnd": {
						"type": "string"
					},
					"idStart": {
						"type": "string"
					}
				},
				"required": [
					"extraChargingTime",
					"energyConsumed",
					"timeRequired",
					"distance",
					"idEnd",
					"idStart"
				],
				"type": "object"
			},
			"expectedTruckJSON": {
				"properties": {
					"autonomy": {
						"type": "number",
						"format": "double"
					},
					"capacity": {
						"type": "number",
						"format": "double"
					},
					"tare": {
						"type": "number",
						"format": "double"
					},
					"registration": {
						"type": "string"
					}
				},
				"required": [
					"autonomy",
					"capacity",
					"tare",
					"registration"
				],
				"type": "object"
			},
			"expectedBodyTruck": {
				"properties": {
					"autonomy": {
						"type": "number",
						"format": "double"
					},
					"capacity": {
						"type": "number",
						"format": "double"
					},
					"tare": {
						"type": "number",
						"format": "double"
					},
					"registration": {
						"type": "string"
					}
				},
				"required": [
					"autonomy",
					"capacity",
					"tare",
					"registration"
				],
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "logistics",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/routes": {
			"get": {
				"operationId": "GetRoutes",
				"responses": {
					"200": {
						"description": "JSON with all the routes",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/expectedRouteJSON"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Returns all the routes that exist",
				"tags": [
					"Routes"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateRoute",
				"responses": {
					"200": {
						"description": "Returns a JSON with the created route",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/expectedBodyRoute"
								}
							}
						}
					}
				},
				"description": "Creates a new route from the given body and returns the created route",
				"tags": [
					"Routes"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/expectedBodyRoute"
							}
						}
					}
				}
			}
		},
		"/routes/{idRoute}": {
			"get": {
				"operationId": "GetRouteById",
				"responses": {
					"200": {
						"description": "Returns a JSON with the route information",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/expectedRouteJSON"
								}
							}
						}
					}
				},
				"description": "This method searches for a route from the given id",
				"tags": [
					"Routes"
				],
				"security": [],
				"parameters": [
					{
						"description": "idRoute of the route",
						"in": "path",
						"name": "idRoute",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateRoute",
				"responses": {
					"200": {
						"description": "Updated route",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/expectedRouteJSON"
								}
							}
						}
					}
				},
				"description": "Searches for the route with the given idRoute and updates it with any of the parameters given in the body",
				"tags": [
					"Routes"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of the route to be updated",
						"in": "path",
						"name": "idRoute",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Can update any of the parameters of the route, not all of them are required",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/expectedPatchBodyRoute",
								"description": "Can update any of the parameters of the route, not all of them are required"
							}
						}
					}
				}
			}
		},
		"/trucks": {
			"get": {
				"operationId": "GetTrucks",
				"responses": {
					"200": {
						"description": "JSON with all the trucks",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/expectedTruckJSON"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Returns all the trucks that exist",
				"tags": [
					"Trucks"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateTruck",
				"responses": {
					"200": {
						"description": "Returns a JSON with the created truck",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/expectedBodyTruck"
								}
							}
						}
					}
				},
				"description": "Creates a truck from the given body and returns the created truck",
				"tags": [
					"Trucks"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/expectedBodyTruck"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateTruckByRegistration",
				"responses": {
					"200": {
						"description": "Returns a JSON with the updated truck",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/expectedTruckJSON"
								}
							}
						}
					}
				},
				"description": "Will update a truck with the given body else if there is no truck with the given registration it will create a new truck",
				"tags": [
					"Trucks"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- Truck body",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/expectedBodyTruck",
								"description": "- Truck body"
							}
						}
					}
				}
			}
		},
		"/trucks/{registration}": {
			"get": {
				"operationId": "GetTruckByRegistration",
				"responses": {
					"200": {
						"description": "Returns a JSON with the truck if its found else returns an error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/expectedTruckJSON"
								}
							}
						}
					}
				},
				"description": "Gets a truck by its registration",
				"tags": [
					"Trucks"
				],
				"security": [],
				"parameters": [
					{
						"description": "- The registration of the truck",
						"in": "path",
						"name": "registration",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}